/*
 ============================================================================
 Name        : Assignment1.c
 Author      : Daniel Webb
 Version     :
 Copyright   : Your copyright notice
 Description : Delegate shell commands via systemcall in child process
 ============================================================================
 */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <sys/wait.h>

int main(void) {

	while(1){

		/*
		 * Initialize Arguments
		 */
		size_t input_max = 100;
		size_t arg_index = 0;
		size_t num_args_allocated = 5;
		size_t max_arg_length = 100;
		char ** command_args = (char **) malloc( num_args_allocated * sizeof(char*));
		char * arg = NULL;
		int file_descriptors[2];
		char * input = (char *) malloc(input_max * sizeof(char));

		/*
		 * Initialize the input char array with null values
		 */
		for(int i = 0; i < input_max; i++)
		{
			input[i] = '\0';
		}

		/*
		 * Get the line of input from STDIN and remove the last char which
		 * will be a '\n' (newline) character
		 */
		printf("\nEnter a command to run (Ctrl+C to quit): ");
		getline(&input, &input_max, stdin);
		input[strlen(input) - 1] = '\0';

	}
}

/*
 ============================================================================
 Name        : Assignment1.c
 Author      : Daniel Webb
 Version     :
 Copyright   : Your copyright notice
 Description : Hello World in C, Ansi-style
 ============================================================================
 */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int main(void) {

	while(1){

		/*
		 * Set the max input length and buffer to receive the stdin command
		 */
		size_t input_max = 100;
		char * input = calloc(input_max, sizeof(char));
		printf("\nEnter a command to run: ");
		getline(&input, &input_max, stdin);

		/*
		 * Keep a running count of command args as they are separated one by
		 * one from the buffer char *. Initially allocate space for 5 args.
		 */
		size_t arg_index = 0;
		size_t num_args_allocated = 5;
		char ** command_args = calloc(num_args_allocated, sizeof(char *));

		char * arg = strtok(input, " ");

		if(arg == NULL)
		{
			printf("No arguments provided.");
			continue;
		}

		while(arg != NULL)
		{
			if(arg_index == num_args_allocated)
			{
				//allocate more space by 5 if ran out fo space
				num_args_allocated += 5;
				command_args = realloc(command_args, num_args_allocated * sizeof(char *));
			}
			// add argument to the char **
			command_args[arg_index] = arg;
			arg_index++;

			arg = strtok(NULL, " ");
		}

		int file_descriptors[2];
		pipe(file_descriptors);

		// redirect stdout and stderr to the same pipe
		dup2(file_descriptors[1], 1);
		dup2(file_descriptors[1], 2);

		execv("/bin/sh", command_args);

		close(file_descriptors[1]);

		FILE * output = fdopen(file_descriptors[0], "r");

		if(output == NULL)
		{
			printf("No output from function call.");
			continue;
		}

		c = fgetc(output);

	}
}
